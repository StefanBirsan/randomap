name: Build and Deploy Randomap to AWS

on:
  push:
    branches: [ "master" ]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: randomap-repo-${{ secrets.STUDENT_IDENTIFIER }}
  APP_RUNNER_SERVICE_NAME: randomap-service-${{ secrets.STUDENT_IDENTIFIER }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Run Unit Tests
        run: pytest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Image to ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG --build-arg APP_AUTHOR="${{ secrets.APP_AUTHOR }}" .
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Tell App Runner to Deploy the New Image
        run: |
          SERVICE_ARN=arn:aws:apprunner:us-east-1:020028129927:service/randomap-service-student-stefan/8342de2e114a45658a465acf00671a42
          aws apprunner update-service --service-arn $SERVICE_ARN --source-configuration '{ "ImageRepository": { "ImageIdentifier": "${{ steps.build-image.outputs.image }}", "ImageRepositoryType": "ECR" } }'